{"version":3,"sources":["optionsPage/node_modules/browser-pack/_prelude.js","optionsPage/node_modules/@material/snackbar/dist/mdc.snackbar.js","optionsPage/optionsPage/index.js","optionsPage/utils/StorageManager.js"],"names":[],"mappingsliCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/*!\n Material Components for the Web\n Copyright (c) 2018 Google Inc.\n License: Apache-2.0\n*/\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"snackbar\"] = factory();\n\telse\n\t\troot[\"mdc\"] = root[\"mdc\"] || {}, root[\"mdc\"][\"snackbar\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 99);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @template A\n */\nvar MDCFoundation = function () {\n  _createClass(MDCFoundation, null, [{\n    key: \"cssClasses\",\n\n    /** @return enum{cssClasses} */\n    get: function get() {\n      // Classes extending MDCFoundation should implement this method to return an object which exports every\n      // CSS class the foundation class needs as a property. e.g. {ACTIVE: 'mdc-component--active'}\n      return {};\n    }\n\n    /** @return enum{strings} */\n\n  }, {\n    key: \"strings\",\n    get: function get() {\n      // Classes extending MDCFoundation should implement this method to return an object which exports all\n      // semantic strings as constants. e.g. {ARIA_ROLE: 'tablist'}\n      return {};\n    }\n\n    /** @return enum{numbers} */\n\n  }, {\n    key: \"numbers\",\n    get: function get() {\n      // Classes extending MDCFoundation should implement this method to return an object which exports all\n      // of its semantic numbers as constants. e.g. {ANIMATION_DELAY_MS: 350}\n      return {};\n    }\n\n    /** @return {!Object} */\n\n  }, {\n    key: \"defaultAdapter\",\n    get: function get() {\n      // Classes extending MDCFoundation may choose to implement this getter in order to provide a convenient\n      // way of viewing the necessary methods of an adapter. In the future, this could also be used for adapter\n      // validation.\n      return {};\n    }\n\n    /**\n     * @param {A=} adapter\n     */\n\n  }]);\n\n  function MDCFoundation() {\n    var adapter = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, MDCFoundation);\n\n    /** @protected {!A} */\n    this.adapter_ = adapter;\n  }\n\n  _createClass(MDCFoundation, [{\n    key: \"init\",\n    value: function init() {\n      // Subclasses should override this method to perform initialization routines (registering events, etc.)\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // Subclasses should override this method to perform de-initialization routines (de-registering events, etc.)\n    }\n  }]);\n\n  return MDCFoundation;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCFoundation);\n\n/***/ }),\n\n/***/ 1:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n/**\n * @template F\n */\n\nvar MDCComponent = function () {\n  _createClass(MDCComponent, null, [{\n    key: 'attachTo',\n\n    /**\n     * @param {!Element} root\n     * @return {!MDCComponent}\n     */\n    value: function attachTo(root) {\n      // Subclasses which extend MDCBase should provide an attachTo() method that takes a root element and\n      // returns an instantiated component with its root set to that element. Also note that in the cases of\n      // subclasses, an explicit foundation class will not have to be passed in; it will simply be initialized\n      // from getDefaultFoundation().\n      return new MDCComponent(root, new __WEBPACK_IMPORTED_MODULE_0__foundation__[\"a\" /* default */]());\n    }\n\n    /**\n     * @param {!Element} root\n     * @param {F=} foundation\n     * @param {...?} args\n     */\n\n  }]);\n\n  function MDCComponent(root) {\n    var foundation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n    _classCallCheck(this, MDCComponent);\n\n    /** @protected {!Element} */\n    this.root_ = root;\n\n    for (var _len = arguments.length, args = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    this.initialize.apply(this, args);\n    // Note that we initialize foundation here and not within the constructor's default param so that\n    // this.root_ is defined and can be used within the foundation class.\n    /** @protected {!F} */\n    this.foundation_ = foundation === undefined ? this.getDefaultFoundation() : foundation;\n    this.foundation_.init();\n    this.initialSyncWithDOM();\n  }\n\n  _createClass(MDCComponent, [{\n    key: 'initialize',\n    value: function initialize() /* ...args */{}\n    // Subclasses can override this to do any additional setup work that would be considered part of a\n    // \"constructor\". Essentially, it is a hook into the parent constructor before the foundation is\n    // initialized. Any additional arguments besides root and foundation will be passed in here.\n\n\n    /**\n     * @return {!F} foundation\n     */\n\n  }, {\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      // Subclasses must override this method to return a properly configured foundation class for the\n      // component.\n      throw new Error('Subclasses must override getDefaultFoundation to return a properly configured ' + 'foundation class');\n    }\n  }, {\n    key: 'initialSyncWithDOM',\n    value: function initialSyncWithDOM() {\n      // Subclasses should override this method if they need to perform work to synchronize with a host DOM\n      // object. An example of this would be a form control wrapper that needs to synchronize its internal state\n      // to some property or attribute of the host DOM. Please note: this is *not* the place to perform DOM\n      // reads/writes that would cause layout / paint, as this is called synchronously from within the constructor.\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      // Subclasses may implement this method to release any resources / deregister any listeners they have\n      // attached. An example of this might be deregistering a resize event from the window object.\n      this.foundation_.destroy();\n    }\n\n    /**\n     * Wrapper method to add an event listener to the component's root element. This is most useful when\n     * listening for custom events.\n     * @param {string} evtType\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: 'listen',\n    value: function listen(evtType, handler) {\n      this.root_.addEventListener(evtType, handler);\n    }\n\n    /**\n     * Wrapper method to remove an event listener to the component's root element. This is most useful when\n     * unlistening for custom events.\n     * @param {string} evtType\n     * @param {!Function} handler\n     */\n\n  }, {\n    key: 'unlisten',\n    value: function unlisten(evtType, handler) {\n      this.root_.removeEventListener(evtType, handler);\n    }\n\n    /**\n     * Fires a cross-browser-compatible custom event from the component root of the given type,\n     * with the given data.\n     * @param {string} evtType\n     * @param {!Object} evtData\n     * @param {boolean=} shouldBubble\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(evtType, evtData) {\n      var shouldBubble = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      var evt = void 0;\n      if (typeof CustomEvent === 'function') {\n        evt = new CustomEvent(evtType, {\n          detail: evtData,\n          bubbles: shouldBubble\n        });\n      } else {\n        evt = document.createEvent('CustomEvent');\n        evt.initCustomEvent(evtType, shouldBubble, false, evtData);\n      }\n\n      this.root_.dispatchEvent(evt);\n    }\n  }]);\n\n  return MDCComponent;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCComponent);\n\n/***/ }),\n\n/***/ 100:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(101);\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\nvar MDCSnackbarFoundation = function (_MDCFoundation) {\n  _inherits(MDCSnackbarFoundation, _MDCFoundation);\n\n  _createClass(MDCSnackbarFoundation, [{\n    key: 'active',\n    get: function get() {\n      return this.active_;\n    }\n  }], [{\n    key: 'cssClasses',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_1__constants__[\"a\" /* cssClasses */];\n    }\n  }, {\n    key: 'strings',\n    get: function get() {\n      return __WEBPACK_IMPORTED_MODULE_1__constants__[\"c\" /* strings */];\n    }\n  }, {\n    key: 'defaultAdapter',\n    get: function get() {\n      return {\n        addClass: function addClass() /* className: string */{},\n        removeClass: function removeClass() /* className: string */{},\n        setAriaHidden: function setAriaHidden() {},\n        unsetAriaHidden: function unsetAriaHidden() {},\n        setActionAriaHidden: function setActionAriaHidden() {},\n        unsetActionAriaHidden: function unsetActionAriaHidden() {},\n        setActionText: function setActionText() /* actionText: string */{},\n        setMessageText: function setMessageText() /* message: string */{},\n        setFocus: function setFocus() {},\n        visibilityIsHidden: function visibilityIsHidden() {\n          return (/* boolean */false\n          );\n        },\n        registerCapturedBlurHandler: function registerCapturedBlurHandler() /* handler: EventListener */{},\n        deregisterCapturedBlurHandler: function deregisterCapturedBlurHandler() /* handler: EventListener */{},\n        registerVisibilityChangeHandler: function registerVisibilityChangeHandler() /* handler: EventListener */{},\n        deregisterVisibilityChangeHandler: function deregisterVisibilityChangeHandler() /* handler: EventListener */{},\n        registerCapturedInteractionHandler: function registerCapturedInteractionHandler() /* evtType: string, handler: EventListener */{},\n        deregisterCapturedInteractionHandler: function deregisterCapturedInteractionHandler() /* evtType: string, handler: EventListener */{},\n        registerActionClickHandler: function registerActionClickHandler() /* handler: EventListener */{},\n        deregisterActionClickHandler: function deregisterActionClickHandler() /* handler: EventListener */{},\n        registerTransitionEndHandler: function registerTransitionEndHandler() /* handler: EventListener */{},\n        deregisterTransitionEndHandler: function deregisterTransitionEndHandler() /* handler: EventListener */{},\n        notifyShow: function notifyShow() {},\n        notifyHide: function notifyHide() {}\n      };\n    }\n  }]);\n\n  function MDCSnackbarFoundation(adapter) {\n    _classCallCheck(this, MDCSnackbarFoundation);\n\n    var _this = _possibleConstructorReturn(this, (MDCSnackbarFoundation.__proto__ || Object.getPrototypeOf(MDCSnackbarFoundation)).call(this, _extends(MDCSnackbarFoundation.defaultAdapter, adapter)));\n\n    _this.active_ = false;\n    _this.actionWasClicked_ = false;\n    _this.dismissOnAction_ = true;\n    _this.firstFocus_ = true;\n    _this.pointerDownRecognized_ = false;\n    _this.snackbarHasFocus_ = false;\n    _this.snackbarData_ = null;\n    _this.queue_ = [];\n    _this.actionClickHandler_ = function () {\n      _this.actionWasClicked_ = true;\n      _this.invokeAction_();\n    };\n    _this.visibilitychangeHandler_ = function () {\n      clearTimeout(_this.timeoutId_);\n      _this.snackbarHasFocus_ = true;\n\n      if (!_this.adapter_.visibilityIsHidden()) {\n        setTimeout(_this.cleanup_.bind(_this), _this.snackbarData_.timeout || __WEBPACK_IMPORTED_MODULE_1__constants__[\"b\" /* numbers */].MESSAGE_TIMEOUT);\n      }\n    };\n    _this.interactionHandler_ = function (evt) {\n      if (evt.type == 'touchstart' || evt.type == 'mousedown') {\n        _this.pointerDownRecognized_ = true;\n      }\n      _this.handlePossibleTabKeyboardFocus_(evt);\n\n      if (evt.type == 'focus') {\n        _this.pointerDownRecognized_ = false;\n      }\n    };\n    _this.blurHandler_ = function () {\n      clearTimeout(_this.timeoutId_);\n      _this.snackbarHasFocus_ = false;\n      _this.timeoutId_ = setTimeout(_this.cleanup_.bind(_this), _this.snackbarData_.timeout || __WEBPACK_IMPORTED_MODULE_1__constants__[\"b\" /* numbers */].MESSAGE_TIMEOUT);\n    };\n    return _this;\n  }\n\n  _createClass(MDCSnackbarFoundation, [{\n    key: 'init',\n    value: function init() {\n      this.adapter_.registerActionClickHandler(this.actionClickHandler_);\n      this.adapter_.setAriaHidden();\n      this.adapter_.setActionAriaHidden();\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      var _this2 = this;\n\n      this.adapter_.deregisterActionClickHandler(this.actionClickHandler_);\n      this.adapter_.deregisterCapturedBlurHandler(this.blurHandler_);\n      this.adapter_.deregisterVisibilityChangeHandler(this.visibilitychangeHandler_);\n      ['touchstart', 'mousedown', 'focus'].forEach(function (evtType) {\n        _this2.adapter_.deregisterCapturedInteractionHandler(evtType, _this2.interactionHandler_);\n      });\n    }\n  }, {\n    key: 'dismissesOnAction',\n    value: function dismissesOnAction() {\n      return this.dismissOnAction_;\n    }\n  }, {\n    key: 'setDismissOnAction',\n    value: function setDismissOnAction(dismissOnAction) {\n      this.dismissOnAction_ = !!dismissOnAction;\n    }\n  }, {\n    key: 'show',\n    value: function show(data) {\n      var _this3 = this;\n\n      if (!data) {\n        throw new Error('Please provide a data object with at least a message to display.');\n      }\n      if (!data.message) {\n        throw new Error('Please provide a message to be displayed.');\n      }\n      if (data.actionHandler && !data.actionText) {\n        throw new Error('Please provide action text with the handler.');\n      }\n      if (this.active) {\n        this.queue_.push(data);\n        return;\n      }\n      clearTimeout(this.timeoutId_);\n      this.snackbarData_ = data;\n      this.firstFocus_ = true;\n      this.adapter_.registerVisibilityChangeHandler(this.visibilitychangeHandler_);\n      this.adapter_.registerCapturedBlurHandler(this.blurHandler_);\n      ['touchstart', 'mousedown', 'focus'].forEach(function (evtType) {\n        _this3.adapter_.registerCapturedInteractionHandler(evtType, _this3.interactionHandler_);\n      });\n\n      var ACTIVE = __WEBPACK_IMPORTED_MODULE_1__constants__[\"a\" /* cssClasses */].ACTIVE,\n          MULTILINE = __WEBPACK_IMPORTED_MODULE_1__constants__[\"a\" /* cssClasses */].MULTILINE,\n          ACTION_ON_BOTTOM = __WEBPACK_IMPORTED_MODULE_1__constants__[\"a\" /* cssClasses */].ACTION_ON_BOTTOM;\n\n\n      this.adapter_.setMessageText(this.snackbarData_.message);\n\n      if (this.snackbarData_.multiline) {\n        this.adapter_.addClass(MULTILINE);\n        if (this.snackbarData_.actionOnBottom) {\n          this.adapter_.addClass(ACTION_ON_BOTTOM);\n        }\n      }\n\n      if (this.snackbarData_.actionHandler) {\n        this.adapter_.setActionText(this.snackbarData_.actionText);\n        this.actionHandler_ = this.snackbarData_.actionHandler;\n        this.setActionHidden_(false);\n      } else {\n        this.setActionHidden_(true);\n        this.actionHandler_ = null;\n        this.adapter_.setActionText(null);\n      }\n\n      this.active_ = true;\n      this.adapter_.addClass(ACTIVE);\n      this.adapter_.unsetAriaHidden();\n      this.adapter_.notifyShow();\n\n      this.timeoutId_ = setTimeout(this.cleanup_.bind(this), this.snackbarData_.timeout || __WEBPACK_IMPORTED_MODULE_1__constants__[\"b\" /* numbers */].MESSAGE_TIMEOUT);\n    }\n  }, {\n    key: 'handlePossibleTabKeyboardFocus_',\n    value: function handlePossibleTabKeyboardFocus_() {\n      var hijackFocus = this.firstFocus_ && !this.pointerDownRecognized_;\n\n      if (hijackFocus) {\n        this.setFocusOnAction_();\n      }\n\n      this.firstFocus_ = false;\n    }\n  }, {\n    key: 'setFocusOnAction_',\n    value: function setFocusOnAction_() {\n      this.adapter_.setFocus();\n      this.snackbarHasFocus_ = true;\n      this.firstFocus_ = false;\n    }\n  }, {\n    key: 'invokeAction_',\n    value: function invokeAction_() {\n      try {\n        if (!this.actionHandler_) {\n          return;\n        }\n\n        this.actionHandler_();\n      } finally {\n        if (this.dismissOnAction_) {\n          this.cleanup_();\n        }\n      }\n    }\n  }, {\n    key: 'cleanup_',\n    value: function cleanup_() {\n      var _this4 = this;\n\n      var allowDismissal = !this.snackbarHasFocus_ || this.actionWasClicked_;\n\n      if (allowDismissal) {\n        var ACTIVE = __WEBPACK_IMPORTED_MODULE_1__constants__[\"a\" /* cssClasses */].ACTIVE,\n            MULTILINE = __WEBPACK_IMPORTED_MODULE_1__constants__[\"a\" /* cssClasses */].MULTILINE,\n            ACTION_ON_BOTTOM = __WEBPACK_IMPORTED_MODULE_1__constants__[\"a\" /* cssClasses */].ACTION_ON_BOTTOM;\n\n\n        this.adapter_.removeClass(ACTIVE);\n\n        var handler = function handler() {\n          clearTimeout(_this4.timeoutId_);\n          _this4.adapter_.deregisterTransitionEndHandler(handler);\n          _this4.adapter_.removeClass(MULTILINE);\n          _this4.adapter_.removeClass(ACTION_ON_BOTTOM);\n          _this4.setActionHidden_(true);\n          _this4.adapter_.setAriaHidden();\n          _this4.active_ = false;\n          _this4.snackbarHasFocus_ = false;\n          _this4.adapter_.notifyHide();\n          _this4.showNext_();\n        };\n\n        this.adapter_.registerTransitionEndHandler(handler);\n      }\n    }\n  }, {\n    key: 'showNext_',\n    value: function showNext_() {\n      if (!this.queue_.length) {\n        return;\n      }\n      this.show(this.queue_.shift());\n    }\n  }, {\n    key: 'setActionHidden_',\n    value: function setActionHidden_(isHidden) {\n      if (isHidden) {\n        this.adapter_.setActionAriaHidden();\n      } else {\n        this.adapter_.unsetActionAriaHidden();\n      }\n    }\n  }]);\n\n  return MDCSnackbarFoundation;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_index__[\"MDCFoundation\"]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (MDCSnackbarFoundation);\n\n/***/ }),\n\n/***/ 101:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return cssClasses; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return strings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return numbers; });\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar cssClasses = {\n  ROOT: 'mdc-snackbar',\n  TEXT: 'mdc-snackbar__text',\n  ACTION_WRAPPER: 'mdc-snackbar__action-wrapper',\n  ACTION_BUTTON: 'mdc-snackbar__action-button',\n  ACTIVE: 'mdc-snackbar--active',\n  MULTILINE: 'mdc-snackbar--multiline',\n  ACTION_ON_BOTTOM: 'mdc-snackbar--action-on-bottom'\n};\n\nvar strings = {\n  TEXT_SELECTOR: '.mdc-snackbar__text',\n  ACTION_WRAPPER_SELECTOR: '.mdc-snackbar__action-wrapper',\n  ACTION_BUTTON_SELECTOR: '.mdc-snackbar__action-button',\n  SHOW_EVENT: 'MDCSnackbar:show',\n  HIDE_EVENT: 'MDCSnackbar:hide'\n};\n\nvar numbers = {\n  MESSAGE_TIMEOUT: 2750\n};\n\n/***/ }),\n\n/***/ 7:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__component__ = __webpack_require__(1);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCFoundation\", function() { return __WEBPACK_IMPORTED_MODULE_0__foundation__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCComponent\", function() { return __WEBPACK_IMPORTED_MODULE_1__component__[\"a\"]; });\n/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n/***/ }),\n\n/***/ 8:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"transformStyleProperties\", function() { return transformStyleProperties; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCorrectEventName\", function() { return getCorrectEventName; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCorrectPropertyName\", function() { return getCorrectPropertyName; });\n/**\n * @license\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {{\n *   noPrefix: string,\n *   webkitPrefix: string,\n *   styleProperty: string\n * }}\n */\nvar VendorPropertyMapType = void 0;\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nvar eventTypeMap = {\n  'animationstart': {\n    noPrefix: 'animationstart',\n    webkitPrefix: 'webkitAnimationStart',\n    styleProperty: 'animation'\n  },\n  'animationend': {\n    noPrefix: 'animationend',\n    webkitPrefix: 'webkitAnimationEnd',\n    styleProperty: 'animation'\n  },\n  'animationiteration': {\n    noPrefix: 'animationiteration',\n    webkitPrefix: 'webkitAnimationIteration',\n    styleProperty: 'animation'\n  },\n  'transitionend': {\n    noPrefix: 'transitionend',\n    webkitPrefix: 'webkitTransitionEnd',\n    styleProperty: 'transition'\n  }\n};\n\n/** @const {Object<string, !VendorPropertyMapType>} */\nvar cssPropertyMap = {\n  'animation': {\n    noPrefix: 'animation',\n    webkitPrefix: '-webkit-animation'\n  },\n  'transform': {\n    noPrefix: 'transform',\n    webkitPrefix: '-webkit-transform'\n  },\n  'transition': {\n    noPrefix: 'transition',\n    webkitPrefix: '-webkit-transition'\n  }\n};\n\n/**\n * @param {!Object} windowObj\n * @return {boolean}\n */\nfunction hasProperShape(windowObj) {\n  return windowObj['document'] !== undefined && typeof windowObj['document']['createElement'] === 'function';\n}\n\n/**\n * @param {string} eventType\n * @return {boolean}\n */\nfunction eventFoundInMaps(eventType) {\n  return eventType in eventTypeMap || eventType in cssPropertyMap;\n}\n\n/**\n * @param {string} eventType\n * @param {!Object<string, !VendorPropertyMapType>} map\n * @param {!Element} el\n * @return {string}\n */\nfunction getJavaScriptEventName(eventType, map, el) {\n  return map[eventType].styleProperty in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n}\n\n/**\n * Helper function to determine browser prefix for CSS3 animation events\n * and property names.\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getAnimationName(windowObj, eventType) {\n  if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType)) {\n    return eventType;\n  }\n\n  var map = /** @type {!Object<string, !VendorPropertyMapType>} */eventType in eventTypeMap ? eventTypeMap : cssPropertyMap;\n  var el = windowObj['document']['createElement']('div');\n  var eventName = '';\n\n  if (map === eventTypeMap) {\n    eventName = getJavaScriptEventName(eventType, map, el);\n  } else {\n    eventName = map[eventType].noPrefix in el.style ? map[eventType].noPrefix : map[eventType].webkitPrefix;\n  }\n\n  return eventName;\n}\n\n// Public functions to access getAnimationName() for JavaScript events or CSS\n// property names.\n\nvar transformStyleProperties = ['transform', 'WebkitTransform', 'MozTransform', 'OTransform', 'MSTransform'];\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectEventName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\n/**\n * @param {!Object} windowObj\n * @param {string} eventType\n * @return {string}\n */\nfunction getCorrectPropertyName(windowObj, eventType) {\n  return getAnimationName(windowObj, eventType);\n}\n\n\n\n/***/ }),\n\n/***/ 99:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCSnackbar\", function() { return MDCSnackbar; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(100);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__material_animation_index__ = __webpack_require__(8);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"MDCSnackbarFoundation\", function() { return __WEBPACK_IMPORTED_MODULE_1__foundation__[\"a\"]; });\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Copyright 2016 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n\n\n\n\n\nvar MDCSnackbar = function (_MDCComponent) {\n  _inherits(MDCSnackbar, _MDCComponent);\n\n  function MDCSnackbar() {\n    _classCallCheck(this, MDCSnackbar);\n\n    return _possibleConstructorReturn(this, (MDCSnackbar.__proto__ || Object.getPrototypeOf(MDCSnackbar)).apply(this, arguments));\n  }\n\n  _createClass(MDCSnackbar, [{\n    key: 'show',\n    value: function show(data) {\n      this.foundation_.show(data);\n    }\n  }, {\n    key: 'getDefaultFoundation',\n    value: function getDefaultFoundation() {\n      var _this2 = this;\n\n      var _MDCSnackbarFoundatio = __WEBPACK_IMPORTED_MODULE_1__foundation__[\"a\" /* default */].strings,\n          TEXT_SELECTOR = _MDCSnackbarFoundatio.TEXT_SELECTOR,\n          ACTION_BUTTON_SELECTOR = _MDCSnackbarFoundatio.ACTION_BUTTON_SELECTOR;\n\n      var getText = function getText() {\n        return _this2.root_.querySelector(TEXT_SELECTOR);\n      };\n      var getActionButton = function getActionButton() {\n        return _this2.root_.querySelector(ACTION_BUTTON_SELECTOR);\n      };\n\n      /* eslint brace-style: \"off\" */\n      return new __WEBPACK_IMPORTED_MODULE_1__foundation__[\"a\" /* default */]({\n        addClass: function addClass(className) {\n          return _this2.root_.classList.add(className);\n        },\n        removeClass: function removeClass(className) {\n          return _this2.root_.classList.remove(className);\n        },\n        setAriaHidden: function setAriaHidden() {\n          return _this2.root_.setAttribute('aria-hidden', 'true');\n        },\n        unsetAriaHidden: function unsetAriaHidden() {\n          return _this2.root_.removeAttribute('aria-hidden');\n        },\n        setActionAriaHidden: function setActionAriaHidden() {\n          return getActionButton().setAttribute('aria-hidden', 'true');\n        },\n        unsetActionAriaHidden: function unsetActionAriaHidden() {\n          return getActionButton().removeAttribute('aria-hidden');\n        },\n        setActionText: function setActionText(text) {\n          getActionButton().textContent = text;\n        },\n        setMessageText: function setMessageText(text) {\n          getText().textContent = text;\n        },\n        setFocus: function setFocus() {\n          return getActionButton().focus();\n        },\n        visibilityIsHidden: function visibilityIsHidden() {\n          return document.hidden;\n        },\n        registerCapturedBlurHandler: function registerCapturedBlurHandler(handler) {\n          return getActionButton().addEventListener('blur', handler, true);\n        },\n        deregisterCapturedBlurHandler: function deregisterCapturedBlurHandler(handler) {\n          return getActionButton().removeEventListener('blur', handler, true);\n        },\n        registerVisibilityChangeHandler: function registerVisibilityChangeHandler(handler) {\n          return document.addEventListener('visibilitychange', handler);\n        },\n        deregisterVisibilityChangeHandler: function deregisterVisibilityChangeHandler(handler) {\n          return document.removeEventListener('visibilitychange', handler);\n        },\n        registerCapturedInteractionHandler: function registerCapturedInteractionHandler(evt, handler) {\n          return document.body.addEventListener(evt, handler, true);\n        },\n        deregisterCapturedInteractionHandler: function deregisterCapturedInteractionHandler(evt, handler) {\n          return document.body.removeEventListener(evt, handler, true);\n        },\n        registerActionClickHandler: function registerActionClickHandler(handler) {\n          return getActionButton().addEventListener('click', handler);\n        },\n        deregisterActionClickHandler: function deregisterActionClickHandler(handler) {\n          return getActionButton().removeEventListener('click', handler);\n        },\n        registerTransitionEndHandler: function registerTransitionEndHandler(handler) {\n          return _this2.root_.addEventListener(Object(__WEBPACK_IMPORTED_MODULE_2__material_animation_index__[\"getCorrectEventName\"])(window, 'transitionend'), handler);\n        },\n        deregisterTransitionEndHandler: function deregisterTransitionEndHandler(handler) {\n          return _this2.root_.removeEventListener(Object(__WEBPACK_IMPORTED_MODULE_2__material_animation_index__[\"getCorrectEventName\"])(window, 'transitionend'), handler);\n        },\n        notifyShow: function notifyShow() {\n          return _this2.emit(__WEBPACK_IMPORTED_MODULE_1__foundation__[\"a\" /* default */].strings.SHOW_EVENT);\n        },\n        notifyHide: function notifyHide() {\n          return _this2.emit(__WEBPACK_IMPORTED_MODULE_1__foundation__[\"a\" /* default */].strings.HIDE_EVENT);\n        }\n      });\n    }\n  }, {\n    key: 'dismissesOnAction',\n    get: function get() {\n      return this.foundation_.dismissesOnAction();\n    },\n    set: function set(dismissesOnAction) {\n      this.foundation_.setDismissOnAction(dismissesOnAction);\n    }\n  }], [{\n    key: 'attachTo',\n    value: function attachTo(root) {\n      return new MDCSnackbar(root);\n    }\n  }]);\n\n  return MDCSnackbar;\n}(__WEBPACK_IMPORTED_MODULE_0__material_base_index__[\"MDCComponent\"]);\n\n/***/ })\n\n/******/ });\n});\n//# sourceMappingURL=mdc.snackbar.js.map","(function() {\r\n\t'use strict';\r\n\t/**\r\n\t * Shorthand function for querySelector\r\n\t * @param {string} el \r\n\t * @returns {HTMLElement} \r\n\t */\r\n\tconst DOM = elem => document.body.querySelector(elem);\r\n\r\n\tvar mdc = require(\"@material/snackbar/dist/mdc.snackbar\");\r\n\tconst popoverDB = require(\"../utils/StorageManager\");\r\n\tconst MDCSnackbar = mdc.MDCSnackbar;\r\n\tconst MDCSnackbarFoundation = mdc.MDCSnackbarFoundation;\r\n\tmdc.MDCSnackbar.attachTo(DOM('.mdc-snackbar'));\r\n\tconst snackbar = new MDCSnackbar(DOM('.mdc-snackbar'))\r\n\tvar shortcutSnapshot = '';\r\n\tvar keyGroup = {\r\n\t\tcodes: [],\r\n\t\tpressing: []\r\n\t};\r\n\r\n\tinitializer().DOMEvents()\r\n\tinitializer().elementsValues()\r\n\tinitializer().storageEvents()\r\n\r\n\r\n\r\n\t////////////////// IMPLEMENTATION //////////////////\r\n\r\n\tfunction initializer() {\r\n\r\n\t\t/**\r\n\t\t * Initializes DOM events listeners\r\n\t\t */\r\n\t\tfunction DOMEvents() {\r\n\t\t\tDOM('.js-popupShortcut').addEventListener('keydown', onKeyDown);\r\n\t\t\tDOM('.js-popupShortcut').addEventListener('keyup', onKeyUp);\r\n\t\t\tDOM('.js-popupShortcut').addEventListener('focus', onFocus);\r\n\t\t\tDOM('.js-popupShortcut').addEventListener('focusout', onFocusOut);\r\n\t\t\tDOM('.js-popupMode').addEventListener('change', savePopupMode);\r\n\t\t\tDOM('.js-fallbackLanguage').addEventListener('change', saveLanguage);\r\n\t\t\tDOM('.js-nlpLanguages').addEventListener('change', saveNlpLanguages);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Initializes DOM Elements values\r\n\t\t */\r\n\t\tfunction elementsValues() {\r\n\t\t\tsyncValues();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Initializes storage changes listeners.\r\n\t\t */\r\n\t\tfunction storageEvents() {\r\n\t\t\tpopoverDB.onChanges(syncValues);\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tDOMEvents,\r\n\t\t\telementsValues,\r\n\t\t\tstorageEvents\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tfunction onFocus(ev) {\r\n\t\tvar val = DOM('.js-popupShortcut').value;\r\n\t\tif (val) {\r\n\t\t\tshortcutSnapshot = val;\r\n\t\t}\r\n\t\tDOM('.js-popupShortcut').value = '';\r\n\t}\r\n\r\n\tfunction onFocusOut(ev) {\r\n\t\tif (DOM('.js-popupShortcut').value) {\r\n\t\t\tsaveShortcut();\r\n\t\t\tsnackbar.show({ message: 'Shortcut saved!' });\r\n\t\t} else {\r\n\t\t\tDOM('.js-popupShortcut').value = shortcutSnapshot;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onKeyDown(ev) {\r\n\t\tconsole.log(keyGroup.pressing);\r\n\t\tif (keyGroup.pressing.length === 0) {\r\n\t\t\tkeyGroup.codes = [];\r\n\t\t}\r\n\t\tif (keyGroup.codes.length < 3 && !keyGroup.codes.includes(ev.code)) {\r\n\t\t\tkeyGroup.pressing.push(ev.keyCode);\r\n\t\t\tkeyGroup.codes.push(ev.code);\r\n\t\t\tDOM('.js-popupShortcut').value = keyGroup.codes.toString();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction onKeyUp(ev) {\r\n\t\tconsole.log(keyGroup.pressing);\r\n\t\tvar index = keyGroup.codes.indexOf(ev.code);\r\n\t\tif (index !== -1) {\r\n\t\t\tkeyGroup.pressing.splice(index, 1);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tasync function syncValues(oldV, newV) {\r\n\t\tvar fallbackLang = newV && newV['fallbackLang'] || await popoverDB.retrieve('fallbackLang');\r\n\t\tvar popupMode = newV && newV['popupMode'] || await popoverDB.retrieve('popupMode');\r\n\t\tvar nlpLangs = newV && newV['nlpLangs'] || await popoverDB.retrieve('nlpLangs');\r\n\t\tvar shortcut = newV && newV['shortcut'] || await popoverDB.retrieve('shortcut');\r\n\r\n\t\tDOM('.js-fallbackLanguage').value = fallbackLang;\r\n\t\tDOM('.js-popupMode').value = popupMode;\r\n\t\tDOM('.js-popupShortcut').value = shortcut.toString();\r\n\r\n\t\tvar checkboxList = document.body.querySelectorAll('.js-nlpLang');\r\n\t\tcheckboxList.forEach(chkbx => {\r\n\t\t\tif (nlpLangs.includes(chkbx.value)) {\r\n\t\t\t\tchkbx.checked = true;\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tfunction saveLanguage() {\r\n\t\tvar fallbackLanguage = DOM('.js-fallbackLanguage').value;\r\n\t\tpopoverDB.update('fallbackLang', fallbackLanguage).then(resp => {\r\n\t\t\tsnackbar.show({ message: ' ✔ Language definitions saved' });\r\n\t\t})\r\n\t}\r\n\r\n\tfunction savePopupMode() {\r\n\t\tvar popupMode = DOM('.js-popupMode').value;\r\n\t\tpopoverDB.update('popupMode', popupMode).then(resp => {\r\n\t\t\tsnackbar.show({ message: '✔ Popup trigger definitions saved' });\r\n\t\t});\r\n\t}\r\n\r\n\tfunction saveShortcut() {\r\n\t\tvar shortcut = keyGroup.codes;\r\n\t\tpopoverDB.update('shortcut', shortcut)\r\n\t\t\t.then(resp => {\r\n\t\t\t\tsnackbar.show({ message: '✔ Shortcut definitions saved' });\r\n\t\t\t});\r\n\t}\r\n\r\n\tfunction saveNlpLanguages() {\r\n\t\tvar languages = [];\r\n\t\tvar checkboxList = document.body.querySelectorAll('.js-nlpLang');\r\n\r\n\t\tcheckboxList.forEach(chkbx => {\r\n\t\t\tif (chkbx.checked) {\r\n\t\t\t\tlanguages.push(chkbx.value);\r\n\t\t\t}\r\n\t\t});\r\n\t\tpopoverDB.update('nlpLangs', languages).then(resp => {\r\n\t\t\tsnackbar.show({ message: '✔ Search Languages definitions saved' });\r\n\t\t});\r\n\t}\r\n}());","(() => {\r\n\t'use strict';\r\n\r\n\r\n\t/**\r\n\t * Manages and facilitate storage (chrome.storage.sync) requests and watchers.\r\n\t */\r\n\tclass PopoverDB {\r\n\r\n\t\tconstructor() {\r\n\t\t\tthis._errorCode = {\r\n\t\t\t\t1: key => `Object \"${key}\" not found`,\r\n\t\t\t\t2: (key, property) => `Object property \"${key}.${property}\" not found in storage.`,\r\n\t\t\t\t3: property => `Object property \".${property}\" not found in storage.`\r\n\t\t\t};\r\n\r\n\t\t\tthis._encodeProp = propertyName => {\r\n\r\n\t\t\t\tlet props = {\r\n\t\t\t\t\tisEnabled: 5,\r\n\t\t\t\t\tfallbackLang: 1,\r\n\t\t\t\t\tnlpLangs: 4,\r\n\t\t\t\t\tshortcut: 3,\r\n\t\t\t\t\tpopupMode: 2\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn props[propertyName];\r\n\t\t\t}\r\n\r\n\t\t\tthis._decodeProp = propertyName => {\r\n\r\n\t\t\t\tlet props = {\r\n\t\t\t\t\t5: 'isEnabled',\r\n\t\t\t\t\t1: 'fallbackLang',\r\n\t\t\t\t\t4: 'nlpLangs',\r\n\t\t\t\t\t3: 'shortcut',\r\n\t\t\t\t\t2: 'popupMode'\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn props[propertyName];\r\n\t\t\t}\r\n\r\n\t\t\tthis._decodeObj = obj => {\r\n\t\t\t\tlet decodedObj = {};\r\n\t\t\t\tObject.keys(obj).forEach(key => {\r\n\t\t\t\t\tdecodedObj[this._decodeProp(key)] = obj[key];\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn decodedObj;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tupdate(property, value) {\r\n\t\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\t\tvar dataString = '';\r\n\t\t\t\tvar data = await this.retrieve();\r\n\r\n\t\t\t\tdata[this._encodeProp(property)] = value;\r\n\t\t\t\tdataString = JSON.stringify(data);\r\n\r\n\t\t\t\tchrome.storage.sync.set({\r\n\t\t\t\t\twldt: dataString\r\n\t\t\t\t}, () => resolve(true));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tretrieve(property = '') {\r\n\t\t\tvar errorCount = 0;\r\n\t\t\treturn new Promise(async (resolve, reject) => {\r\n\t\t\t\tvar dataString = '';\r\n\t\t\t\ttry {\r\n\t\t\t\t\tdataString = await new Promise(resolve => chrome.storage.sync.get('wldt', obj => resolve(obj['wldt'])));\r\n\t\t\t\t\tvar data = JSON.parse(dataString);\r\n\r\n\t\t\t\t\tif (property.length > 0)\r\n\t\t\t\t\t\tresolve(data[this._encodeProp(property)])\r\n\t\t\t\t\telse resolve(data);\r\n\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\terrorCount += 1;\r\n\t\t\t\t\tif (errorCount >= 2) {\r\n\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet wikilinkData = JSON.stringify({\r\n\t\t\t\t\t\t\t1: 'en',\r\n\t\t\t\t\t\t\t2: 'shortcut',\r\n\t\t\t\t\t\t\t3: ['ShiftLeft', 'AltLeft'],\r\n\t\t\t\t\t\t\t4: ['por', 'eng', 'esp', 'rus'],\r\n\t\t\t\t\t\t\t5: true\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tchrome.storage.sync.set({ wldt: wikilinkData }, () => this.retrieve(property));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t});\r\n\t\t}\r\n\r\n\r\n\t\t/**\r\n\t\t * Listens to storage changes in given object and executes a function in a onChanged event.\r\n\t\t * @param {*} objName The name of the object in the storage to listens.\r\n\t\t * @returns {object} A function to pass as an argument the function to execute on event.\r\n\t\t */\r\n\t\tonChanges(fn) {\r\n\r\n\t\t\tvar decodedObj = this._decodeObj;\r\n\r\n\t\t\tchrome.storage.onChanged.addListener((changes, areaName) => {\r\n\t\t\t\t//Popover enabled state changed\r\n\t\t\t\tif (changes['wldt']) {\r\n\t\t\t\t\tfn(decodedObj(JSON.parse(changes['wldt'].oldValue)), decodedObj(JSON.parse(changes['wldt'].newValue)));\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tmodule.exports = new PopoverDB();\r\n\r\n})();"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}